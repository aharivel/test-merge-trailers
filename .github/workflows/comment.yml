# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2025 Robin Jarry
---
name: Comment

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

jobs:
  posted:
    if: ${{ github.event.issue.pull_request && (contains(github.event.comment.body, 'Acked-by:') || contains(github.event.comment.body, 'Tested-by:') || contains(github.event.comment.body, 'Reviewed-by:')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Parse trailer from comment
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const regexp = /(acked|tested|reviewed)-by:\s+(\w[^<]+\w)\s+<?([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})>?/i;
            const match = context.payload.comment.body.match(regexp);
            if (!match) {
              core.setFailed('No valid trailer found in comment');
              return;
            }
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.issue.number
            });
            return {
              trailer: `${match[1]}-by: ${match[2]} <${match[3]}>`,
              commits: String(pr.commits),
              head_repo: pr.head.repo.full_name,
              head_ref: pr.head.ref,
            };

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.TRAILER_BOT_TOKEN }}
          repository: ${{ fromJSON(steps.parse.outputs.result).head_repo }}
          ref: ${{ fromJSON(steps.parse.outputs.result).head_ref }}
          fetch-depth: 0
          persist-credentials: true

      - name: Amend all pull request commits with the new trailer
        env:
          GIT_TRAILER_DEBUG: 1
          COMMITS: ${{ fromJSON(steps.parse.outputs.result).commits }}
          HEAD_REF: ${{ fromJSON(steps.parse.outputs.result).head_ref }}
          TRAILER: ${{ fromJSON(steps.parse.outputs.result).trailer }}
        run: |
          set -xe
          GIT_COMMITTER_NAME=$(git log -1 --pretty=%cN)
          GIT_COMMITTER_EMAIL=$(git log -1 --pretty=%cE)
          git config set user.name "$GIT_COMMITTER_NAME"
          git config set user.email "$GIT_COMMITTER_EMAIL"
          export GIT_COMMITTER_NAME GIT_COMMITTER_EMAIL
          rm -f .git/hooks/commit-msg
          ln -s ../../devtools/commit-msg .git/hooks/commit-msg
          git rebase "HEAD~$COMMITS" \
            --exec "git commit -C HEAD --no-edit --amend --trailer='$TRAILER'"
          git push --force origin "$HEAD_REF"
