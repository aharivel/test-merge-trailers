# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2025 Robin Jarry
---
name: Trailer

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

jobs:
  add:
    if: ${{ github.event.issue.pull_request && (startsWith(github.event.comment.body, 'Acked-by:') || startsWith(github.event.comment.body, 'Tested-by:')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Generate app token
        uses: actions/create-github-app-token@v2
        id: bot
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Resolve trailer data
        id: data
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.bot.outputs.token }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.issue.number
            })
            core.setOutput("repository", pr.head.repo.full_name);
            core.setOutput("head_ref", pr.head.ref);
            core.setOutput("commits", pr.commits);
            core.setOutput("number", pr.number);
            const regexp = /(acked|tested)-by:\s+(\w[^<]+\w)\s+<?([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})>?/i;
            const match = context.payload.comment.body.match(regexp);
            if (match) {
                core.setOutput("trailer", `${match[1]}-by: ${match[2]} <${match[3]}>`);
            }

      - uses: actions/checkout@v4
        if: ${{ success() && steps.data.outputs.result.trailer }}
        with:
          repository: ${{ steps.data.outputs.result.repo }}
          ref: ${{ steps.data.outputs.result.head_ref }}
          token: ${{ steps.bot.outputs.token }}
          fetch-depth: 0
          persist-credentials: false

      - run: .github/workflows/add-trailer.sh
        if: ${{ success() && steps.data.outputs.result.trailer }}
        env:
          GH_TOKEN: ${{ steps.bot.outputs.token }}
          PR_NUMBER: ${{ steps.data.outputs.result.number }}
          PR_COMMITS: ${{ steps.data.outputs.result.commits }}
          HEAD_REF: ${{ steps.data.outputs.result.head_ref }}
          TRAILER: ${{ steps.data.outputs.result.trailer }}
